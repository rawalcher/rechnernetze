//
// Generated file, do not edit! Created by opp_msgtool 6.1 from udp/UDPSegment.msg.
//

#ifndef __UDPSEGMENT_M_H
#define __UDPSEGMENT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class UDPSegment;
/**
 * Class generated from <tt>udp/UDPSegment.msg:21</tt> by opp_msgtool.
 * <pre>
 * packet UDPSegment
 * {
 *     int srcPort;
 *     int dstPort;
 *     int length;
 *     int checksum;
 *     string data;
 * }
 * </pre>
 */
class UDPSegment : public ::omnetpp::cPacket
{
  protected:
    int srcPort = 0;
    int dstPort = 0;
    int length = 0;
    int checksum = 0;
    omnetpp::opp_string data;

  private:
    void copy(const UDPSegment& other);

  protected:
    bool operator==(const UDPSegment&) = delete;

  public:
    UDPSegment(const char *name=nullptr, short kind=0);
    UDPSegment(const UDPSegment& other);
    virtual ~UDPSegment();
    UDPSegment& operator=(const UDPSegment& other);
    virtual UDPSegment *dup() const override {return new UDPSegment(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrcPort() const;
    virtual void setSrcPort(int srcPort);

    virtual int getDstPort() const;
    virtual void setDstPort(int dstPort);

    virtual int getLength() const;
    virtual void setLength(int length);

    virtual int getChecksum() const;
    virtual void setChecksum(int checksum);

    virtual const char * getData() const;
    virtual void setData(const char * data);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const UDPSegment& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, UDPSegment& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline UDPSegment *fromAnyPtr(any_ptr ptr) { return check_and_cast<UDPSegment*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __UDPSEGMENT_M_H

