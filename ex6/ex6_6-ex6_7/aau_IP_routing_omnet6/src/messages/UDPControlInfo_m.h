//
// Generated file, do not edit! Created by opp_msgtool 6.1 from messages/UDPControlInfo.msg.
//

#ifndef __UDPCONTROLINFO_M_H
#define __UDPCONTROLINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class UDPControlInfo;
// cplusplus {{
#include "controlInfoIP_m.h"
// }}

#include "controlInfoIP_m.h" // import controlInfoIP

/**
 * Class generated from <tt>messages/UDPControlInfo.msg:27</tt> by opp_msgtool.
 * <pre>
 * packet UDPControlInfo extends controlInfoIP
 * {
 *     //inet::IPv4Address srcIP;	// source address
 *     int srcPort;	// source port
 * 
 *     //inet::IPv4Address destIP;	// destination address
 *     int destPort;	// destination address
 * }
 * </pre>
 */
class UDPControlInfo : public ::controlInfoIP
{
  protected:
    int srcPort = 0;
    int destPort = 0;

  private:
    void copy(const UDPControlInfo& other);

  protected:
    bool operator==(const UDPControlInfo&) = delete;

  public:
    UDPControlInfo(const char *name=nullptr, short kind=0);
    UDPControlInfo(const UDPControlInfo& other);
    virtual ~UDPControlInfo();
    UDPControlInfo& operator=(const UDPControlInfo& other);
    virtual UDPControlInfo *dup() const override {return new UDPControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrcPort() const;
    virtual void setSrcPort(int srcPort);

    virtual int getDestPort() const;
    virtual void setDestPort(int destPort);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const UDPControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, UDPControlInfo& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline UDPControlInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<UDPControlInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __UDPCONTROLINFO_M_H

